# -*- coding: utf-8 -*-
"""3327 ZKML Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K99K88C3KYVdmSPd5uj2xe4PWG1-C0nK
"""

import pandas as pd
from matplotlib import pyplot as plt

from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import silhouette_score

dogs = pd.read_csv('dogs.csv')

feature_names = dogs.columns[1:]

X = dogs[feature_names]

scaler = MinMaxScaler()
X = pd.DataFrame(scaler.fit_transform(X), columns=feature_names)

kmeans = KMeans(n_clusters=2, n_init='auto')
kmeans.fit(X)

ks = range(2, X.shape[0])
inits = ['k-means++', 'random']

fig = plt.figure(figsize=(10, 30))
idx = 1

inertias = []
ss = []

for k in ks:
  for init in inits:
    kmeans = KMeans(n_clusters=k, init=init, n_init='auto')
    kmeans.fit(X)

    if init == 'k-means++':
      inertias.append(kmeans.inertia_)
      ss.append(silhouette_score(X, kmeans.labels_))

    fig.add_subplot(len(ks), len(inits), idx)
    idx += 1

    for i in range(k):
      cluster = dogs[i == kmeans.labels_]
      plt.scatter(cluster['height'], cluster['weight'])

    centroids = pd.DataFrame(scaler.inverse_transform(kmeans.cluster_centers_), columns=feature_names)
    plt.scatter(centroids['height'], centroids['weight'], marker='x', color='black')

    plt.title(f'k={k}, init={init}, s={silhouette_score(X, kmeans.labels_)}')

plt.tight_layout()

plt.plot(ks, inertias, marker='o')
plt.plot(ks, ss, marker='x')

plt.show()
